// Code generated from Lexer.g4 by ANTLR 4.13.1. DO NOT EDIT.

package antlrParser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type Lexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var LexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func lexerLexerInit() {
	staticData := &LexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE", "ACCOUNT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "", "", "", "", "'vars'", "'max'", "'source'", "'destination'",
		"'send'", "'from'", "'up'", "'to'", "'remaining'", "'allowing'", "'unbounded'",
		"'overdraft'", "'kept'", "'save'", "'('", "')'", "'['", "']'", "'{'",
		"'}'", "','", "'='", "'*'", "'+'", "'-'", "", "", "", "", "", "", "'@'",
		"':'",
	}
	staticData.SymbolicNames = []string{
		"", "WS", "NEWLINE", "MULTILINE_COMMENT", "LINE_COMMENT", "VARS", "MAX",
		"SOURCE", "DESTINATION", "SEND", "FROM", "UP", "TO", "REMAINING", "ALLOWING",
		"UNBOUNDED", "OVERDRAFT", "KEPT", "SAVE", "LPARENS", "RPARENS", "LBRACKET",
		"RBRACKET", "LBRACE", "RBRACE", "COMMA", "EQ", "STAR", "PLUS", "MINUS",
		"RATIO_PORTION_LITERAL", "PERCENTAGE_PORTION_LITERAL", "STRING", "IDENTIFIER",
		"NUMBER", "ASSET", "ACCOUNT_START", "COLON", "ACCOUNT_TEXT", "VARIABLE_NAME_ACC",
		"VARIABLE_NAME_DEFAULT",
	}
	staticData.RuleNames = []string{
		"WS", "NEWLINE", "MULTILINE_COMMENT", "LINE_COMMENT", "VARS", "MAX",
		"SOURCE", "DESTINATION", "SEND", "FROM", "UP", "TO", "REMAINING", "ALLOWING",
		"UNBOUNDED", "OVERDRAFT", "KEPT", "SAVE", "LPARENS", "RPARENS", "LBRACKET",
		"RBRACKET", "LBRACE", "RBRACE", "COMMA", "EQ", "STAR", "PLUS", "MINUS",
		"RATIO_PORTION_LITERAL", "PERCENTAGE_PORTION_LITERAL", "STRING", "IDENTIFIER",
		"NUMBER", "ASSET", "ACCOUNT_START", "COLON", "VARIABLE_NAME_FRAMGMENT",
		"ACCOUNT_TEXT", "VARIABLE_NAME_ACC", "VARIABLE_NAME_DEFAULT",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 40, 350, 6, -1, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3,
		7, 3, 2, 4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9,
		7, 9, 2, 10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7,
		14, 2, 15, 7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19,
		2, 20, 7, 20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2,
		25, 7, 25, 2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30,
		7, 30, 2, 31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7,
		35, 2, 36, 7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 2, 40, 7, 40,
		1, 0, 4, 0, 86, 8, 0, 11, 0, 12, 0, 87, 1, 0, 1, 0, 1, 1, 4, 1, 93, 8,
		1, 11, 1, 12, 1, 94, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 5, 2, 102, 8, 2, 10,
		2, 12, 2, 105, 9, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 3, 1, 3, 1, 3, 1,
		3, 5, 3, 116, 8, 3, 10, 3, 12, 3, 119, 9, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1,
		4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5, 1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1,
		6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1, 7, 1,
		7, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 8, 1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1,
		9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12,
		1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13, 1,
		13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14,
		1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1, 15, 1, 15, 1, 15, 1, 15, 1,
		15, 1, 15, 1, 15, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16, 1, 16, 1, 17,
		1, 17, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 19, 1, 19, 1, 20, 1, 20, 1,
		21, 1, 21, 1, 22, 1, 22, 1, 23, 1, 23, 1, 24, 1, 24, 1, 25, 1, 25, 1, 26,
		1, 26, 1, 27, 1, 27, 1, 28, 1, 28, 1, 29, 4, 29, 241, 8, 29, 11, 29, 12,
		29, 242, 1, 29, 3, 29, 246, 8, 29, 1, 29, 1, 29, 3, 29, 250, 8, 29, 1,
		29, 4, 29, 253, 8, 29, 11, 29, 12, 29, 254, 1, 30, 4, 30, 258, 8, 30, 11,
		30, 12, 30, 259, 1, 30, 1, 30, 4, 30, 264, 8, 30, 11, 30, 12, 30, 265,
		3, 30, 268, 8, 30, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 31, 5, 31, 276,
		8, 31, 10, 31, 12, 31, 279, 9, 31, 1, 31, 1, 31, 1, 32, 4, 32, 284, 8,
		32, 11, 32, 12, 32, 285, 1, 32, 5, 32, 289, 8, 32, 10, 32, 12, 32, 292,
		9, 32, 1, 33, 3, 33, 295, 8, 33, 1, 33, 4, 33, 298, 8, 33, 11, 33, 12,
		33, 299, 1, 33, 1, 33, 4, 33, 304, 8, 33, 11, 33, 12, 33, 305, 5, 33, 308,
		8, 33, 10, 33, 12, 33, 311, 9, 33, 1, 34, 4, 34, 314, 8, 34, 11, 34, 12,
		34, 315, 1, 35, 1, 35, 1, 35, 1, 35, 1, 36, 1, 36, 1, 36, 1, 36, 1, 37,
		1, 37, 4, 37, 328, 8, 37, 11, 37, 12, 37, 329, 1, 37, 5, 37, 333, 8, 37,
		10, 37, 12, 37, 336, 9, 37, 1, 38, 4, 38, 339, 8, 38, 11, 38, 12, 38, 340,
		1, 38, 1, 38, 1, 39, 1, 39, 1, 39, 1, 39, 1, 40, 1, 40, 2, 103, 117, 0,
		41, 2, 1, 4, 2, 6, 3, 8, 4, 10, 5, 12, 6, 14, 7, 16, 8, 18, 9, 20, 10,
		22, 11, 24, 12, 26, 13, 28, 14, 30, 15, 32, 16, 34, 17, 36, 18, 38, 19,
		40, 20, 42, 21, 44, 22, 46, 23, 48, 24, 50, 25, 52, 26, 54, 27, 56, 28,
		58, 29, 60, 30, 62, 31, 64, 32, 66, 33, 68, 34, 70, 35, 72, 36, 74, 37,
		76, 0, 78, 38, 80, 39, 82, 40, 2, 0, 1, 10, 3, 0, 9, 10, 13, 13, 32, 32,
		2, 0, 10, 10, 13, 13, 1, 0, 48, 57, 1, 0, 32, 32, 3, 0, 10, 10, 13, 13,
		34, 34, 1, 0, 97, 122, 2, 0, 95, 95, 97, 122, 2, 0, 47, 57, 65, 90, 3,
		0, 48, 57, 95, 95, 97, 122, 5, 0, 45, 45, 48, 57, 65, 90, 95, 95, 97, 122,
		371, 0, 2, 1, 0, 0, 0, 0, 4, 1, 0, 0, 0, 0, 6, 1, 0, 0, 0, 0, 8, 1, 0,
		0, 0, 0, 10, 1, 0, 0, 0, 0, 12, 1, 0, 0, 0, 0, 14, 1, 0, 0, 0, 0, 16, 1,
		0, 0, 0, 0, 18, 1, 0, 0, 0, 0, 20, 1, 0, 0, 0, 0, 22, 1, 0, 0, 0, 0, 24,
		1, 0, 0, 0, 0, 26, 1, 0, 0, 0, 0, 28, 1, 0, 0, 0, 0, 30, 1, 0, 0, 0, 0,
		32, 1, 0, 0, 0, 0, 34, 1, 0, 0, 0, 0, 36, 1, 0, 0, 0, 0, 38, 1, 0, 0, 0,
		0, 40, 1, 0, 0, 0, 0, 42, 1, 0, 0, 0, 0, 44, 1, 0, 0, 0, 0, 46, 1, 0, 0,
		0, 0, 48, 1, 0, 0, 0, 0, 50, 1, 0, 0, 0, 0, 52, 1, 0, 0, 0, 0, 54, 1, 0,
		0, 0, 0, 56, 1, 0, 0, 0, 0, 58, 1, 0, 0, 0, 0, 60, 1, 0, 0, 0, 0, 62, 1,
		0, 0, 0, 0, 64, 1, 0, 0, 0, 0, 66, 1, 0, 0, 0, 0, 68, 1, 0, 0, 0, 0, 70,
		1, 0, 0, 0, 0, 72, 1, 0, 0, 0, 0, 74, 1, 0, 0, 0, 0, 82, 1, 0, 0, 0, 1,
		78, 1, 0, 0, 0, 1, 80, 1, 0, 0, 0, 2, 85, 1, 0, 0, 0, 4, 92, 1, 0, 0, 0,
		6, 96, 1, 0, 0, 0, 8, 111, 1, 0, 0, 0, 10, 124, 1, 0, 0, 0, 12, 129, 1,
		0, 0, 0, 14, 133, 1, 0, 0, 0, 16, 140, 1, 0, 0, 0, 18, 152, 1, 0, 0, 0,
		20, 157, 1, 0, 0, 0, 22, 162, 1, 0, 0, 0, 24, 165, 1, 0, 0, 0, 26, 168,
		1, 0, 0, 0, 28, 178, 1, 0, 0, 0, 30, 187, 1, 0, 0, 0, 32, 197, 1, 0, 0,
		0, 34, 207, 1, 0, 0, 0, 36, 212, 1, 0, 0, 0, 38, 217, 1, 0, 0, 0, 40, 219,
		1, 0, 0, 0, 42, 221, 1, 0, 0, 0, 44, 223, 1, 0, 0, 0, 46, 225, 1, 0, 0,
		0, 48, 227, 1, 0, 0, 0, 50, 229, 1, 0, 0, 0, 52, 231, 1, 0, 0, 0, 54, 233,
		1, 0, 0, 0, 56, 235, 1, 0, 0, 0, 58, 237, 1, 0, 0, 0, 60, 240, 1, 0, 0,
		0, 62, 257, 1, 0, 0, 0, 64, 271, 1, 0, 0, 0, 66, 283, 1, 0, 0, 0, 68, 294,
		1, 0, 0, 0, 70, 313, 1, 0, 0, 0, 72, 317, 1, 0, 0, 0, 74, 321, 1, 0, 0,
		0, 76, 325, 1, 0, 0, 0, 78, 338, 1, 0, 0, 0, 80, 344, 1, 0, 0, 0, 82, 348,
		1, 0, 0, 0, 84, 86, 7, 0, 0, 0, 85, 84, 1, 0, 0, 0, 86, 87, 1, 0, 0, 0,
		87, 85, 1, 0, 0, 0, 87, 88, 1, 0, 0, 0, 88, 89, 1, 0, 0, 0, 89, 90, 6,
		0, 0, 0, 90, 3, 1, 0, 0, 0, 91, 93, 7, 1, 0, 0, 92, 91, 1, 0, 0, 0, 93,
		94, 1, 0, 0, 0, 94, 92, 1, 0, 0, 0, 94, 95, 1, 0, 0, 0, 95, 5, 1, 0, 0,
		0, 96, 97, 5, 47, 0, 0, 97, 98, 5, 42, 0, 0, 98, 103, 1, 0, 0, 0, 99, 102,
		3, 6, 2, 0, 100, 102, 9, 0, 0, 0, 101, 99, 1, 0, 0, 0, 101, 100, 1, 0,
		0, 0, 102, 105, 1, 0, 0, 0, 103, 104, 1, 0, 0, 0, 103, 101, 1, 0, 0, 0,
		104, 106, 1, 0, 0, 0, 105, 103, 1, 0, 0, 0, 106, 107, 5, 42, 0, 0, 107,
		108, 5, 47, 0, 0, 108, 109, 1, 0, 0, 0, 109, 110, 6, 2, 0, 0, 110, 7, 1,
		0, 0, 0, 111, 112, 5, 47, 0, 0, 112, 113, 5, 47, 0, 0, 113, 117, 1, 0,
		0, 0, 114, 116, 9, 0, 0, 0, 115, 114, 1, 0, 0, 0, 116, 119, 1, 0, 0, 0,
		117, 118, 1, 0, 0, 0, 117, 115, 1, 0, 0, 0, 118, 120, 1, 0, 0, 0, 119,
		117, 1, 0, 0, 0, 120, 121, 3, 4, 1, 0, 121, 122, 1, 0, 0, 0, 122, 123,
		6, 3, 0, 0, 123, 9, 1, 0, 0, 0, 124, 125, 5, 118, 0, 0, 125, 126, 5, 97,
		0, 0, 126, 127, 5, 114, 0, 0, 127, 128, 5, 115, 0, 0, 128, 11, 1, 0, 0,
		0, 129, 130, 5, 109, 0, 0, 130, 131, 5, 97, 0, 0, 131, 132, 5, 120, 0,
		0, 132, 13, 1, 0, 0, 0, 133, 134, 5, 115, 0, 0, 134, 135, 5, 111, 0, 0,
		135, 136, 5, 117, 0, 0, 136, 137, 5, 114, 0, 0, 137, 138, 5, 99, 0, 0,
		138, 139, 5, 101, 0, 0, 139, 15, 1, 0, 0, 0, 140, 141, 5, 100, 0, 0, 141,
		142, 5, 101, 0, 0, 142, 143, 5, 115, 0, 0, 143, 144, 5, 116, 0, 0, 144,
		145, 5, 105, 0, 0, 145, 146, 5, 110, 0, 0, 146, 147, 5, 97, 0, 0, 147,
		148, 5, 116, 0, 0, 148, 149, 5, 105, 0, 0, 149, 150, 5, 111, 0, 0, 150,
		151, 5, 110, 0, 0, 151, 17, 1, 0, 0, 0, 152, 153, 5, 115, 0, 0, 153, 154,
		5, 101, 0, 0, 154, 155, 5, 110, 0, 0, 155, 156, 5, 100, 0, 0, 156, 19,
		1, 0, 0, 0, 157, 158, 5, 102, 0, 0, 158, 159, 5, 114, 0, 0, 159, 160, 5,
		111, 0, 0, 160, 161, 5, 109, 0, 0, 161, 21, 1, 0, 0, 0, 162, 163, 5, 117,
		0, 0, 163, 164, 5, 112, 0, 0, 164, 23, 1, 0, 0, 0, 165, 166, 5, 116, 0,
		0, 166, 167, 5, 111, 0, 0, 167, 25, 1, 0, 0, 0, 168, 169, 5, 114, 0, 0,
		169, 170, 5, 101, 0, 0, 170, 171, 5, 109, 0, 0, 171, 172, 5, 97, 0, 0,
		172, 173, 5, 105, 0, 0, 173, 174, 5, 110, 0, 0, 174, 175, 5, 105, 0, 0,
		175, 176, 5, 110, 0, 0, 176, 177, 5, 103, 0, 0, 177, 27, 1, 0, 0, 0, 178,
		179, 5, 97, 0, 0, 179, 180, 5, 108, 0, 0, 180, 181, 5, 108, 0, 0, 181,
		182, 5, 111, 0, 0, 182, 183, 5, 119, 0, 0, 183, 184, 5, 105, 0, 0, 184,
		185, 5, 110, 0, 0, 185, 186, 5, 103, 0, 0, 186, 29, 1, 0, 0, 0, 187, 188,
		5, 117, 0, 0, 188, 189, 5, 110, 0, 0, 189, 190, 5, 98, 0, 0, 190, 191,
		5, 111, 0, 0, 191, 192, 5, 117, 0, 0, 192, 193, 5, 110, 0, 0, 193, 194,
		5, 100, 0, 0, 194, 195, 5, 101, 0, 0, 195, 196, 5, 100, 0, 0, 196, 31,
		1, 0, 0, 0, 197, 198, 5, 111, 0, 0, 198, 199, 5, 118, 0, 0, 199, 200, 5,
		101, 0, 0, 200, 201, 5, 114, 0, 0, 201, 202, 5, 100, 0, 0, 202, 203, 5,
		114, 0, 0, 203, 204, 5, 97, 0, 0, 204, 205, 5, 102, 0, 0, 205, 206, 5,
		116, 0, 0, 206, 33, 1, 0, 0, 0, 207, 208, 5, 107, 0, 0, 208, 209, 5, 101,
		0, 0, 209, 210, 5, 112, 0, 0, 210, 211, 5, 116, 0, 0, 211, 35, 1, 0, 0,
		0, 212, 213, 5, 115, 0, 0, 213, 214, 5, 97, 0, 0, 214, 215, 5, 118, 0,
		0, 215, 216, 5, 101, 0, 0, 216, 37, 1, 0, 0, 0, 217, 218, 5, 40, 0, 0,
		218, 39, 1, 0, 0, 0, 219, 220, 5, 41, 0, 0, 220, 41, 1, 0, 0, 0, 221, 222,
		5, 91, 0, 0, 222, 43, 1, 0, 0, 0, 223, 224, 5, 93, 0, 0, 224, 45, 1, 0,
		0, 0, 225, 226, 5, 123, 0, 0, 226, 47, 1, 0, 0, 0, 227, 228, 5, 125, 0,
		0, 228, 49, 1, 0, 0, 0, 229, 230, 5, 44, 0, 0, 230, 51, 1, 0, 0, 0, 231,
		232, 5, 61, 0, 0, 232, 53, 1, 0, 0, 0, 233, 234, 5, 42, 0, 0, 234, 55,
		1, 0, 0, 0, 235, 236, 5, 43, 0, 0, 236, 57, 1, 0, 0, 0, 237, 238, 5, 45,
		0, 0, 238, 59, 1, 0, 0, 0, 239, 241, 7, 2, 0, 0, 240, 239, 1, 0, 0, 0,
		241, 242, 1, 0, 0, 0, 242, 240, 1, 0, 0, 0, 242, 243, 1, 0, 0, 0, 243,
		245, 1, 0, 0, 0, 244, 246, 7, 3, 0, 0, 245, 244, 1, 0, 0, 0, 245, 246,
		1, 0, 0, 0, 246, 247, 1, 0, 0, 0, 247, 249, 5, 47, 0, 0, 248, 250, 7, 3,
		0, 0, 249, 248, 1, 0, 0, 0, 249, 250, 1, 0, 0, 0, 250, 252, 1, 0, 0, 0,
		251, 253, 7, 2, 0, 0, 252, 251, 1, 0, 0, 0, 253, 254, 1, 0, 0, 0, 254,
		252, 1, 0, 0, 0, 254, 255, 1, 0, 0, 0, 255, 61, 1, 0, 0, 0, 256, 258, 7,
		2, 0, 0, 257, 256, 1, 0, 0, 0, 258, 259, 1, 0, 0, 0, 259, 257, 1, 0, 0,
		0, 259, 260, 1, 0, 0, 0, 260, 267, 1, 0, 0, 0, 261, 263, 5, 46, 0, 0, 262,
		264, 7, 2, 0, 0, 263, 262, 1, 0, 0, 0, 264, 265, 1, 0, 0, 0, 265, 263,
		1, 0, 0, 0, 265, 266, 1, 0, 0, 0, 266, 268, 1, 0, 0, 0, 267, 261, 1, 0,
		0, 0, 267, 268, 1, 0, 0, 0, 268, 269, 1, 0, 0, 0, 269, 270, 5, 37, 0, 0,
		270, 63, 1, 0, 0, 0, 271, 277, 5, 34, 0, 0, 272, 273, 5, 92, 0, 0, 273,
		276, 5, 34, 0, 0, 274, 276, 8, 4, 0, 0, 275, 272, 1, 0, 0, 0, 275, 274,
		1, 0, 0, 0, 276, 279, 1, 0, 0, 0, 277, 275, 1, 0, 0, 0, 277, 278, 1, 0,
		0, 0, 278, 280, 1, 0, 0, 0, 279, 277, 1, 0, 0, 0, 280, 281, 5, 34, 0, 0,
		281, 65, 1, 0, 0, 0, 282, 284, 7, 5, 0, 0, 283, 282, 1, 0, 0, 0, 284, 285,
		1, 0, 0, 0, 285, 283, 1, 0, 0, 0, 285, 286, 1, 0, 0, 0, 286, 290, 1, 0,
		0, 0, 287, 289, 7, 6, 0, 0, 288, 287, 1, 0, 0, 0, 289, 292, 1, 0, 0, 0,
		290, 288, 1, 0, 0, 0, 290, 291, 1, 0, 0, 0, 291, 67, 1, 0, 0, 0, 292, 290,
		1, 0, 0, 0, 293, 295, 3, 58, 28, 0, 294, 293, 1, 0, 0, 0, 294, 295, 1,
		0, 0, 0, 295, 297, 1, 0, 0, 0, 296, 298, 7, 2, 0, 0, 297, 296, 1, 0, 0,
		0, 298, 299, 1, 0, 0, 0, 299, 297, 1, 0, 0, 0, 299, 300, 1, 0, 0, 0, 300,
		309, 1, 0, 0, 0, 301, 303, 5, 95, 0, 0, 302, 304, 7, 2, 0, 0, 303, 302,
		1, 0, 0, 0, 304, 305, 1, 0, 0, 0, 305, 303, 1, 0, 0, 0, 305, 306, 1, 0,
		0, 0, 306, 308, 1, 0, 0, 0, 307, 301, 1, 0, 0, 0, 308, 311, 1, 0, 0, 0,
		309, 307, 1, 0, 0, 0, 309, 310, 1, 0, 0, 0, 310, 69, 1, 0, 0, 0, 311, 309,
		1, 0, 0, 0, 312, 314, 7, 7, 0, 0, 313, 312, 1, 0, 0, 0, 314, 315, 1, 0,
		0, 0, 315, 313, 1, 0, 0, 0, 315, 316, 1, 0, 0, 0, 316, 71, 1, 0, 0, 0,
		317, 318, 5, 64, 0, 0, 318, 319, 1, 0, 0, 0, 319, 320, 6, 35, 1, 0, 320,
		73, 1, 0, 0, 0, 321, 322, 5, 58, 0, 0, 322, 323, 1, 0, 0, 0, 323, 324,
		6, 36, 1, 0, 324, 75, 1, 0, 0, 0, 325, 327, 5, 36, 0, 0, 326, 328, 7, 6,
		0, 0, 327, 326, 1, 0, 0, 0, 328, 329, 1, 0, 0, 0, 329, 327, 1, 0, 0, 0,
		329, 330, 1, 0, 0, 0, 330, 334, 1, 0, 0, 0, 331, 333, 7, 8, 0, 0, 332,
		331, 1, 0, 0, 0, 333, 336, 1, 0, 0, 0, 334, 332, 1, 0, 0, 0, 334, 335,
		1, 0, 0, 0, 335, 77, 1, 0, 0, 0, 336, 334, 1, 0, 0, 0, 337, 339, 7, 9,
		0, 0, 338, 337, 1, 0, 0, 0, 339, 340, 1, 0, 0, 0, 340, 338, 1, 0, 0, 0,
		340, 341, 1, 0, 0, 0, 341, 342, 1, 0, 0, 0, 342, 343, 6, 38, 2, 0, 343,
		79, 1, 0, 0, 0, 344, 345, 3, 76, 37, 0, 345, 346, 1, 0, 0, 0, 346, 347,
		6, 39, 2, 0, 347, 81, 1, 0, 0, 0, 348, 349, 3, 76, 37, 0, 349, 83, 1, 0,
		0, 0, 26, 0, 1, 87, 94, 101, 103, 117, 242, 245, 249, 254, 259, 265, 267,
		275, 277, 285, 290, 294, 299, 305, 309, 315, 329, 334, 340, 3, 6, 0, 0,
		5, 1, 0, 4, 0, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// LexerInit initializes any static state used to implement Lexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func LexerInit() {
	staticData := &LexerLexerStaticData
	staticData.once.Do(lexerLexerInit)
}

// NewLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewLexer(input antlr.CharStream) *Lexer {
	LexerInit()
	l := new(Lexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &LexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "Lexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// Lexer tokens.
const (
	LexerWS                         = 1
	LexerNEWLINE                    = 2
	LexerMULTILINE_COMMENT          = 3
	LexerLINE_COMMENT               = 4
	LexerVARS                       = 5
	LexerMAX                        = 6
	LexerSOURCE                     = 7
	LexerDESTINATION                = 8
	LexerSEND                       = 9
	LexerFROM                       = 10
	LexerUP                         = 11
	LexerTO                         = 12
	LexerREMAINING                  = 13
	LexerALLOWING                   = 14
	LexerUNBOUNDED                  = 15
	LexerOVERDRAFT                  = 16
	LexerKEPT                       = 17
	LexerSAVE                       = 18
	LexerLPARENS                    = 19
	LexerRPARENS                    = 20
	LexerLBRACKET                   = 21
	LexerRBRACKET                   = 22
	LexerLBRACE                     = 23
	LexerRBRACE                     = 24
	LexerCOMMA                      = 25
	LexerEQ                         = 26
	LexerSTAR                       = 27
	LexerPLUS                       = 28
	LexerMINUS                      = 29
	LexerRATIO_PORTION_LITERAL      = 30
	LexerPERCENTAGE_PORTION_LITERAL = 31
	LexerSTRING                     = 32
	LexerIDENTIFIER                 = 33
	LexerNUMBER                     = 34
	LexerASSET                      = 35
	LexerACCOUNT_START              = 36
	LexerCOLON                      = 37
	LexerACCOUNT_TEXT               = 38
	LexerVARIABLE_NAME_ACC          = 39
	LexerVARIABLE_NAME_DEFAULT      = 40
)

// LexerACCOUNT_MODE is the Lexer mode.
const LexerACCOUNT_MODE = 1
